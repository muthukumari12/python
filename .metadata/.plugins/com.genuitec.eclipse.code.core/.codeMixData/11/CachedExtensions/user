{"input":{"ourVersion":"1.27.1","commit":"3a5de95fd3d113d0657e7875e16184be16c44f3f","locale":"en-us","devMode":false,"absoluteFolderPath":"C:\\Users\\MR5\\.codemix\\extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1547009721787},"result":[{"name":"path-intellisense","displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"1.4.2","publisher":"christian-kohler","engines":{"vscode":"^1.0.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"}}}},"main":"C:\\Users\\MR5\\.codemix\\extensions\\christian-kohler.path-intellisense-1.4.2\\out\\src\\extension","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/minimatch":"^2.0.29","typescript":"^2.3.2","vscode":"^0.11.0"},"dependencies":{"minimatch":"^3.0.4"},"isBuiltin":false,"isUnderDevelopment":false,"id":"christian-kohler.path-intellisense","extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\MR5\\.codemix\\extensions\\christian-kohler.path-intellisense-1.4.2","path":"/C:/Users/MR5/.codemix/extensions/christian-kohler.path-intellisense-1.4.2","scheme":"file"}},{"keywords":["CodeMix"],"displayName":"Python Pack","engines":{"vscode":"^1.20.0"},"name":"python","icon":"python.png","description":"Extension pack to provide rapid functionality in CodeMix.","publisher":"codemix","categories":["Extension Packs"],"extensionDependencies":["formulahendry.code-runner","christian-kohler.path-intellisense","ms-python.python"],"version":"0.9.1","isBuiltin":false,"isUnderDevelopment":false,"id":"codemix.python","extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\MR5\\.codemix\\extensions\\codemix.python-0.9.1","path":"/C:/Users/MR5/.codemix/extensions/codemix.python-0.9.1","scheme":"file"}},{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Objective-C, Rust, Racket, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D","version":"0.9.3","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.17.0"},"categories":["Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage"],"main":"C:\\Users\\MR5\\.codemix\\extensions\\formulahendry.code-runner-0.9.3\\out\\src\\extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":{"light":"./images/run-light.png","dark":"./images/run-dark.png"}},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput","command":"code-runner.stop","group":"stop-code-run"}],"editor/title":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runhaskell","nim":"nim compile --verbosity:0 --hints:off --run"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","tree-kill":"^1.1.0"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^2.3.3","tslint":"^5.5.0","typescript":"^2.0.3","vscode":"^1.0.0"},"isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.code-runner","extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\MR5\\.codemix\\extensions\\formulahendry.code-runner-0.9.3","path":"/C:/Users/MR5/.codemix/extensions/formulahendry.code-runner-0.9.3","scheme":"file"}},{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, code formatting, refactoring, unit tests, snippets, and more.","version":"2018.4.0","publisher":"ms-python","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","badges":[{"url":"https://travis-ci.org/Microsoft/vscode-python.svg?branch=master","href":"https://travis-ci.org/Microsoft/vscode-python","description":"Continuous integration (Travis)"},{"url":"https://ci.appveyor.com/api/projects/status/s0pt8d79gqw222j7?svg=true","href":"https://ci.appveyor.com/project/DonJayamanne/vscode-python-v3vd6/branch/master","description":"Continuous integration (AppVeyor)"},{"url":"https://codecov.io/gh/Microsoft/vscode-python/branch/master/graph/badge.svg","href":"https://codecov.io/gh/Microsoft/vscode-python","description":"Test coverage"}],"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.18.0"},"recommendations":["donjayamanne.jupyter"],"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other"],"activationEvents":["onLanguage:python","onDebugResolve:python","onDebugResolve:pythonExperimental","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewTestOutput","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.updateSparkLibrary","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal"],"main":"C:\\Users\\MR5\\.codemix\\extensions\\ms-python.python-2018.4.0\\out\\client\\extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"ctrl+enter","when":"editorFocus && editorHasSelection && editorLangId == python"}],"commands":[{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.runtests","title":"Run All Unit Tests","category":"Python"},{"command":"python.debugtests","title":"Debug All Unit Tests","category":"Python"},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.updateSparkLibrary","title":"Update Workspace PySpark Libraries","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Unit Test Output","category":"Python"},{"command":"python.selectAndRunTestMethod","title":"Run Unit Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Unit Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Unit Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Unit Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Unit Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorHasSelection && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"}],"explorer/context":[{"when":"resourceLangId == python","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"}]},"debuggers":[{"type":"python","label":"Python","languages":["python"],"enableBreakpointsFor":{"languageIds":["python","html"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","program":"./out/client/debugger/Main.js","runtime":"node","configurationSnippets":[{"label":"Python: Current File","description":"Debug a Python program with standard output","body":{"name":"Python: Current File","type":"python","request":"launch","program":"^\"\\${file}\""}},{"label":"Python: PySpark","description":"Debug PySpark","body":{"name":"PySpark","type":"python","request":"launch","osx":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"windows":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit.cmd\""},"linux":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"program":"^\"\\${file}\""}},{"label":"Python: Module","description":"Debug a Python Module","body":{"name":"Python Module","type":"python","request":"launch","module":"module.name"}},{"label":"Python: Terminal (integrated)","description":"Debug a Python program with Integrated Terminal/Console","body":{"name":"Integrated Terminal/Console","type":"python","request":"launch","program":"^\"\\${file}\"","console":"integratedTerminal"}},{"label":"Python: Terminal (external)","description":"Debug a Python program with External Terminal/Console","body":{"name":"External Terminal/Console","type":"python","request":"launch","program":"^\"\\${file}\"","console":"externalTerminal"}},{"label":"Python: Django","description":"Debug a Django Application","body":{"name":"Django","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/manage.py\"","args":["runserver","--noreload","--nothreading"],"debugOptions":["RedirectOutput","Django"]}},{"label":"Python: Flask (0.11.x or later)","description":"Debug a Flask Application","body":{"name":"Flask","type":"python","request":"launch","stopOnEntry":false,"pythonPath":"^\"\\${config:python.pythonPath}\"","module":"flask","cwd":"^\"\\${workspaceFolder}\"","env":{"FLASK_APP":"^\"\\${workspaceFolder}/app.py\""},"args":["run","--no-debugger","--no-reload"]}},{"label":"Python: Flask (0.10.x or earlier)","description":"Debug an older styled Flask Application","body":{"name":"Flask (0.10.x or earlier)","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/run.py\""}},{"label":"Python: Pyramid Application","description":"Debug a Pyramid Application","body":{"name":"Pyramid","type":"python","request":"launch","args":["^\"\\${workspaceFolder}/development.ini\""],"debugOptions":["RedirectOutput","Pyramid"]}},{"label":"Python: Watson Application","description":"Debug a Watson Application","body":{"name":"Watson","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/console.py\"","args":["dev","runserver","--noreload=True"]}},{"label":"Python: Scrapy","description":"Scrapy with Integrated Terminal/Console","body":{"name":"Scrapy","type":"python","request":"launch","program":"~/.virtualenvs/scrapy/bin/scrapy","args":["crawl","specs","-o","bikes.json"],"console":"integratedTerminal"}},{"label":"Python: Attach","description":"Attach the debugger for remote debugging","body":{"name":"Attach (Remote Debug)","type":"python","request":"attach","localRoot":"^\"\\${workspaceFolder}\"","remoteRoot":"^\"\\${workspaceFolder}\"","port":3000,"secret":"my_secret","host":"localhost"}}],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"debugOptions":{"type":"array","description":"Advanced options, view read me for further details.","items":{"type":"string","enum":["RedirectOutput","DebugStdLib","BreakOnSystemExitZero","Django","Sudo","IgnoreDjangoTemplateWarnings","Pyramid"]},"default":["RedirectOutput"]},"exceptionHandling":{"description":"List of exception types and how they are handled during debugging (ignore, always break or break only if unhandled).","properties":{"ignore":{"type":"array","description":"Never break into these exceptions, e.g. 'copy.Error'","default":[],"items":{"type":"string"}},"always":{"type":"array","description":"Always break into these exceptions, e.g. 'copy.Error'","default":[],"items":{"type":"string"}},"unhandled":{"type":"array","description":"Break into these exceptions if they aren't handled, e.g. 'copy.Error'","default":[],"items":{"type":"string"}}}},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false}}},"attach":{"required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","description":"Local source root that corrresponds to the 'remoteRoot'.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","description":"The source root of the remote host.","default":""},"port":{"type":"number","description":"Debug port to attach","default":0},"host":{"type":"string","description":"IP Address of the of remote server (default is localhost or use 127.0.0.1).","default":"localhost"},"secret":{"type":"string","description":"Secret used to authenticate for remote debugging.","default":""},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false}}}},"initialConfigurations":[{"name":"Python: Current File","type":"python","request":"launch","program":"${file}"},{"name":"Python: Attach","type":"python","request":"attach","localRoot":"${workspaceFolder}","remoteRoot":"${workspaceFolder}","port":3000,"secret":"my_secret","host":"localhost"},{"name":"Python: Terminal (integrated)","type":"python","request":"launch","program":"${file}","console":"integratedTerminal"},{"name":"Python: Terminal (external)","type":"python","request":"launch","program":"${file}","console":"externalTerminal"},{"name":"Python: Django","type":"python","request":"launch","program":"${workspaceFolder}/manage.py","args":["runserver","--noreload","--nothreading"],"debugOptions":["RedirectOutput","Django"]},{"name":"Python: Flask (0.11.x or later)","type":"python","request":"launch","module":"flask","env":{"FLASK_APP":"${workspaceFolder}/app.py"},"args":["run","--no-debugger","--no-reload"]},{"name":"Python: Module","type":"python","request":"launch","module":"module.name"},{"name":"Python: Pyramid","type":"python","request":"launch","args":["${workspaceFolder}/development.ini"],"debugOptions":["RedirectOutput","Pyramid"]},{"name":"Python: Watson","type":"python","request":"launch","program":"${workspaceFolder}/console.py","args":["dev","runserver","--noreload=True"]},{"name":"Python: All debug Options","type":"python","request":"launch","pythonPath":"${config:python.pythonPath}","program":"${file}","module":"module.name","env":{"VAR1":"1","VAR2":"2"},"envFile":"${workspaceFolder}/.env","args":["arg1","arg2"],"debugOptions":["RedirectOutput"]}]},{"type":"pythonExperimental","label":"Python Experimental","languages":["python"],"enableBreakpointsFor":{"languageIds":["python","html"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","program":"./out/client/debugger/mainV2.js","runtime":"node","configurationSnippets":[{"label":"Python Experimental: Terminal (integrated)","description":"Debug a Python program with Integrated Terminal/Console","body":{"name":"Python Experimental: Terminal (integrated)","type":"pythonExperimental","request":"launch","program":"^\"\\${file}\"","console":"integratedTerminal"}},{"label":"Python Experimental: Terminal (external)","description":"Debug a Python program with External Terminal/Console","body":{"name":"Python Experimental: Terminal (external)","type":"pythonExperimental","request":"launch","program":"^\"\\${file}\"","console":"externalTerminal"}},{"label":"Python Experimental: Django","description":"Debug a Django Application","body":{"name":"Django","type":"pythonExperimental","request":"launch","program":"^\"\\${workspaceFolder}/manage.py\"","args":["runserver","--noreload","--nothreading"],"django":true}},{"label":"Python Experimental: Flask","description":"Debug a Flask Application","body":{"name":"Flask","type":"pythonExperimental","request":"launch","module":"flask","env":{"FLASK_APP":"^\"\\${workspaceFolder}/app.py\""},"args":["run","--no-debugger","--no-reload"],"jinja":true}},{"label":"Python Experimental: PySpark","description":"Debug PySpark","body":{"name":"PySpark","type":"pythonExperimental","request":"launch","osx":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"windows":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit.cmd\""},"linux":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"program":"^\"\\${file}\""}},{"label":"Python Experimental: Watson","description":"Debug a Watson Application","body":{"name":"Watson","type":"pythonExperimental","request":"launch","program":"^\"\\${workspaceFolder}/console.py\"","args":["dev","runserver","--noreload=True"],"jinja":true}},{"label":"Python Experimental: Scrapy","description":"Scrapy with Integrated Terminal/Console","body":{"name":"Scrapy","type":"pythonExperimental","request":"launch","module":"scrapy","args":["crawl","specs","-o","bikes.json"]}},{"label":"Python Experimental: Pyramid","description":"Debug a Pyramid Application","body":{"name":"Pyramid","type":"pythonExperimental","request":"launch","args":["^\"\\${workspaceFolder}/development.ini\""],"pyramid":true,"jinja":true}},{"label":"Python Experimental: Attach","description":"Attach the debugger for remote debugging","body":{"name":"Attach (Remote Debug)","type":"pythonExperimental","request":"attach","port":3000,"host":"localhost"}}],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Debug port to attach","default":0},"host":{"type":"string","description":"IP Address of the of remote server (default is localhost or use 127.0.0.1).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null}}}},"initialConfigurations":[{"name":"Python Experimental: Current File (Integrated Terminal)","type":"pythonExperimental","request":"launch","program":"${file}","console":"integratedTerminal"},{"name":"Python Experimental: Attach","type":"pythonExperimental","request":"attach","port":3000,"host":"localhost"},{"name":"Python Experimental: Django","type":"pythonExperimental","request":"launch","program":"${workspaceFolder}/manage.py","console":"integratedTerminal","args":["runserver","--noreload","--nothreading"],"django":true},{"name":"Python Experimental: Flask","type":"pythonExperimental","request":"launch","module":"flask","env":{"FLASK_APP":"${workspaceFolder}/app.py"},"args":["run","--no-debugger","--no-reload"],"jinja":true},{"name":"Python Experimental: Current File (External Terminal)","type":"pythonExperimental","request":"launch","program":"${file}","console":"externalTerminal"}]}],"configuration":{"type":"object","title":"Python Configuration","properties":{"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.preloadModules":{"type":"array","items":{"type":"string"},"default":[],"description":"Comma delimited list of modules preloaded to speed up Auto Complete (e.g. add Numpy, Pandas, etc, items slow to load when autocompleting).","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":false,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.disablePromptForFeatures":{"type":"array","default":[],"description":"Do not display a prompt to install these features","items":{"type":"string","default":"pylint","description":"Feature","enum":["flake8","mypy","pep8","pylama","prospector","pydocstyle","pylint"]},"scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8' and 'yapf'.","enum":["autopep8","yapf","none"],"scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory).","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pep8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Pep8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Pep8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pep8","scope":"resource"},"python.linting.pep8Path":{"type":"string","default":"pep8","description":"Path to pep8, you can use a custom version of pep8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.unitTest.cwd":{"type":"string","default":null,"description":"Optional working directory for unit tests.","scope":"resource"},"python.unitTest.debugHost":{"type":"number","default":"localhost","description":"IP Address of the of the local unit test server (default is localhost or use 127.0.0.1).","scope":"resource"},"python.unitTest.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of unittests.","scope":"resource"},"python.unitTest.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.nosetestsEnabled":{"type":"boolean","default":false,"description":"Whether to enable or disable unit testing using nosetests.","scope":"resource"},"python.unitTest.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.promptToConfigure":{"type":"boolean","default":true,"description":"Where to prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.unitTest.pyTestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.pyTestEnabled":{"type":"boolean","default":false,"description":"Whether to enable or disable unit testing using pytest.","scope":"resource"},"python.unitTest.pyTestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.unitTest.unittestEnabled":{"type":"boolean","default":false,"description":"Whether to enable or disable unit testing using unittest.","scope":"resource"},"python.unitTest.useExperimentalDebugger":{"type":"boolean","default":false,"description":"Use the experimental debugger when debugging unit tests.","scope":"resource"},"python.venvFolders":{"type":"array","default":["envs",".pyenv",".direnv"],"description":"Folders in your home directory to look into for virtual environments.","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualilified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable Workspace Symbol provider using ctags.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","testDebugger":"node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/multiRootTest.js","testAnalysisEngine":"node ./out/test/analysisEngineTest.js","precommit":"node gulpfile.js","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","clean":"gulp clean","clean:ptvsd":"gulp clean:ptvsd","cover:enable":"gulp cover:enable","debugger-coverage":"gulp debugger-coverage"},"dependencies":{"arch":"2.1.0","diff-match-patch":"1.0.0","fs-extra":"4.0.3","fuzzy":"0.1.3","get-port":"3.2.0","iconv-lite":"0.4.21","inversify":"4.11.1","line-by-line":"0.1.6","lodash":"4.17.5","md5":"2.2.1","minimatch":"3.0.4","named-js-regexp":"1.3.3","node-stream-zip":"1.6.0","opn":"5.3.0","pidusage":"1.2.0","reflect-metadata":"0.1.12","request":"2.85.0","request-progress":"3.0.0","rxjs":"5.5.9","semver":"5.5.0","sudo-prompt":"8.2.0","tmp":"0.0.29","tree-kill":"1.2.0","typescript-char":"0.0.0","uint64be":"1.0.1","unicode":"10.0.0","untildify":"3.0.2","vscode-debugadapter":"1.28.0","vscode-debugprotocol":"1.28.0","vscode-extension-telemetry":"0.0.15","vscode-languageclient":"3.5.1","vscode-languageserver":"3.5.1","winreg":"1.2.4","xml2js":"0.4.19"},"devDependencies":{"@types/chai":"^4.1.2","@types/chai-as-promised":"^7.1.0","@types/del":"^3.0.0","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/iconv-lite":"^0.0.1","@types/istanbul":"^0.4.29","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^2.2.48","@types/node":"^9.4.7","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^4.3.0","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","JSONStream":"^1.3.2","azure-storage":"^2.8.1","chai":"^4.1.2","chai-as-promised":"^7.1.1","codecov":"^3.0.0","colors":"^1.2.1","debounce":"^1.1.0","decache":"^4.4.0","del":"^3.0.0","event-stream":"^3.3.4","gulp":"^3.9.1","gulp-debounced-watch":"^1.0.4","gulp-filter":"^5.1.0","gulp-gitmodified":"^1.1.1","gulp-json-editor":"^2.2.2","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-watch":"^5.0.0","husky":"^0.14.3","is-running":"^2.1.0","istanbul":"^0.4.5","mocha":"^5.0.4","relative":"^3.0.2","remap-istanbul":"^0.10.1","retyped-diff-match-patch-tsd-ambient":"^1.0.0-0","shortid":"^2.2.8","sinon":"^4.4.5","tslint":"^5.9.1","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","typemoq":"^2.1.0","typescript":"^2.7.2","typescript-formatter":"^7.1.0","vscode":"^1.1.5","vscode-debugadapter-testsupport":"^1.27.0"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\MR5\\.codemix\\extensions\\ms-python.python-2018.4.0","path":"/C:/Users/MR5/.codemix/extensions/ms-python.python-2018.4.0","scheme":"file"}}]}